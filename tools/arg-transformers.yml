

ALL_ARGS:
  axis: as_axis
  axes: as_axis


Hashing:
  num_bins: as.integer
  salt: as_nullable_integer

"*":
  input_shape: normalize_shape
  batch_size: as_nullable_integer
  batch_input_shape: normalize_shape

Permute:
  dims: function(x) tuple(as.list(as.integer(x)))

CategoryEncoding:
  num_tokens: as_nullable_integer

Embedding:
  input_length: as_nullable_integer

MultiHeadAttention:
  num_heads: as.integer
  key_dim: as.integer
  value_dim: as.integer

# "*":
#   axis: as_axis

AlphaDropout:
  seed: as_nullable_integer

"Conv*":
  filters: as.integer
  kernel_size:   as_integer_or_integer_tuple
  dilation_rate: as_integer_or_integer_tuple
  strides:       as_integer_or_integer_tuple

"*Pooling?D":
  pool_size: as.integer
  strides: as_nullable_integer

Reshape:
  target_shape: as.integer

TextVectorization:
   max_tokens:             as_nullable_integer
   output_sequence_length: as_nullable_integer
   ngrams: function(x) if(length(x) > 1) as_integer_or_integer_tuple(x) else as_nullable_integer(x)


# in keras 3 we'll make these 1 based
# in keras 2, keep them 0 based
Concatenate:
  axis: as.integer

Dot:
  axes: as.integer

LayerNormalization:
  axis: as.integer

Softmax:
  axis: as.integer

