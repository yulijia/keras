% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers.R
\name{layer_global_max_pooling_1d}
\alias{layer_global_max_pooling_1d}
\title{Global max pooling operation for 1D temporal data}
\usage{
layer_global_max_pooling_1d(object, ...)
}
\arguments{
\item{...}{standard layer arguments.}

\item{data_format}{A string,
one of \code{channels_last} (default) or \code{channels_first}.
The ordering of the dimensions in the inputs.
\code{channels_last} corresponds to inputs with shape
\verb{(batch, steps, features)} while \code{channels_first}
corresponds to inputs with shape
\verb{(batch, features, steps)}.}

\item{keepdims}{A boolean, whether to keep the temporal dimension or not.
If \code{keepdims} is \code{FALSE} (default), the rank of the tensor is reduced
for spatial dimensions.
If \code{keepdims} is \code{TRUE}, the temporal dimension are retained with
length 1.
The behavior is the same as for \code{tf.reduce_max} or \code{np.max}.}
}
\description{
Global max pooling operation for 1D temporal data
}
\details{
Downsamples the input representation by taking the maximum value over
the time dimension.

For example:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3.], [4., 5., 6.], [7., 8., 9.]])
>>> x = tf.reshape(x, [3, 3, 1])
>>> x
<tf.Tensor: shape=(3, 3, 1), dtype=float32, numpy=
array([[[1.], [2.], [3.]],
       [[4.], [5.], [6.]],
       [[7.], [8.], [9.]]], dtype=float32)>
>>> max_pool_1d = tf.keras.layers.GlobalMaxPooling1D()
>>> max_pool_1d(x)
<tf.Tensor: shape=(3, 1), dtype=float32, numpy=
array([[3.],
       [6.],
       [9.], dtype=float32)>
}\if{html}{\out{</div>}}

Input shape:
\itemize{
\item If \code{data_format='channels_last'}:
3D tensor with shape:
\verb{(batch_size, steps, features)}
\item If \code{data_format='channels_first'}:
3D tensor with shape:
\verb{(batch_size, features, steps)}
}

Output shape:
\itemize{
\item If \code{keepdims}=FALSE:
2D tensor with shape \verb{(batch_size, features)}.
\item If \code{keepdims}=TRUE:
\itemize{
\item If \code{data_format='channels_last'}:
3D tensor with shape \verb{(batch_size, 1, features)}
\item If \code{data_format='channels_first'}:
3D tensor with shape \verb{(batch_size, features, 1)}
}
}
}
\seealso{
\itemize{
\item \url{https://keras.io/api/layers}
}
}
