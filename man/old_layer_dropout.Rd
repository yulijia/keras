% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers-dropout.R
\name{old_layer_dropout}
\alias{old_layer_dropout}
\title{Applies Dropout to the input.}
\usage{
old_layer_dropout(
  object,
  rate,
  noise_shape = NULL,
  seed = NULL,
  input_shape = NULL,
  batch_input_shape = NULL,
  batch_size = NULL,
  name = NULL,
  trainable = NULL,
  weights = NULL
)
}
\arguments{
\item{rate}{float between 0 and 1. Fraction of the input units to drop.}

\item{noise_shape}{1D integer tensor representing the shape of the binary
dropout mask that will be multiplied with the input. For instance, if your
inputs have shape \verb{(batch_size, timesteps, features)} and you want the
dropout mask to be the same for all timesteps, you can use
\code{noise_shape=c(batch_size, 1, features)}.}

\item{seed}{integer to use as random seed.}
}
\description{
Dropout consists in randomly setting a fraction \code{rate} of input units to 0 at
each update during training time, which helps prevent overfitting.
}
\seealso{
Other core layers: 
\code{\link{old_layer_activation}()},
\code{\link{old_layer_activity_regularization}()},
\code{\link{old_layer_attention}()},
\code{\link{old_layer_dense_features}()},
\code{\link{old_layer_dense}()},
\code{\link{old_layer_flatten}()},
\code{\link{old_layer_input}()},
\code{\link{old_layer_lambda}()},
\code{\link{old_layer_masking}()},
\code{\link{old_layer_permute}()},
\code{\link{old_layer_repeat_vector}()},
\code{\link{old_layer_reshape}()}

Other dropout layers: 
\code{\link{old_layer_spatial_dropout_1d}()},
\code{\link{old_layer_spatial_dropout_2d}()},
\code{\link{old_layer_spatial_dropout_3d}()}
}
\concept{core layers}
\concept{dropout layers}
