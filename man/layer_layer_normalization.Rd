% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers.R
\name{layer_layer_normalization}
\alias{layer_layer_normalization}
\title{Layer normalization layer (Ba et al., 2016)}
\usage{
layer_layer_normalization(
  object,
  axis = -1L,
  epsilon = 0.001,
  center = TRUE,
  scale = TRUE,
  beta_initializer = "zeros",
  gamma_initializer = "ones",
  beta_regularizer = NULL,
  gamma_regularizer = NULL,
  beta_constraint = NULL,
  gamma_constraint = NULL,
  ...
)
}
\arguments{
\item{axis}{Integer or List/Tuple. The axis or axes to normalize across.
Typically, this is the features axis/axes. The left-out axes are
typically the batch axis/axes. \code{-1} is the last dimension in the
input. Defaults to \code{-1}.}

\item{epsilon}{Small float added to variance to avoid dividing by zero. Defaults
to 1e-3}

\item{center}{If TRUE, add offset of \code{beta} to normalized tensor. If FALSE,
\code{beta} is ignored. Defaults to \code{TRUE}.}

\item{scale}{If TRUE, multiply by \code{gamma}. If FALSE, \code{gamma} is not used.
When the next layer is linear (also e.g. \code{nn.relu}), this can be
disabled since the scaling will be done by the next layer.
Defaults to \code{TRUE}.}

\item{beta_initializer}{Initializer for the beta weight. Defaults to zeros.}

\item{gamma_initializer}{Initializer for the gamma weight. Defaults to ones.}

\item{beta_regularizer}{Optional regularizer for the beta weight. NULL by
default.}

\item{gamma_regularizer}{Optional regularizer for the gamma weight. NULL by
default.}

\item{beta_constraint}{Optional constraint for the beta weight. NULL by default.}

\item{gamma_constraint}{Optional constraint for the gamma weight. NULL by
default.}

\item{...}{standard layer arguments.}
}
\description{
Layer normalization layer (Ba et al., 2016)
}
\details{
Normalize the activations of the previous layer for each given example in a
batch independently, rather than across a batch like Batch Normalization.
i.e. applies a transformation that maintains the mean activation within each
example close to 0 and the activation standard deviation close to 1.

Given a tensor \code{inputs}, moments are calculated and normalization
is performed across the axes specified in \code{axis}.
}
\seealso{
\itemize{
\item \url{https://keras.io/api/layers}
}
}
