% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzzz.R
\name{layer_average_pooling_2d}
\alias{layer_average_pooling_2d}
\title{Average pooling operation for spatial data}
\usage{
layer_average_pooling_2d(
  object,
  pool_size = list(2L, 2L),
  strides = NULL,
  padding = "valid",
  data_format = NULL,
  ...
)

layer_average_pooling_2d(
  object,
  pool_size = list(2L, 2L),
  strides = NULL,
  padding = "valid",
  data_format = NULL,
  ...
)
}
\arguments{
\item{pool_size}{integer or list of 2 integers,
factors by which to downscale (vertical, horizontal).
\verb{(2, 2)} will halve the input in both spatial dimension.
If only one integer is specified, the same window length
will be used for both dimensions.}

\item{strides}{Integer, list of 2 integers, or NULL.
Strides values.
If NULL, it will default to \code{pool_size}.}

\item{padding}{One of \code{"valid"} or \code{"same"} (case-insensitive).
\code{"valid"} means no padding. \code{"same"} results in padding evenly to
the left/right or up/down of the input such that output has the same
height/width dimension as the input.}

\item{data_format}{A string,
one of \code{channels_last} (default) or \code{channels_first}.
The ordering of the dimensions in the inputs.
\code{channels_last} corresponds to inputs with shape
\verb{(batch, height, width, channels)} while \code{channels_first}
corresponds to inputs with shape
\verb{(batch, channels, height, width)}.
When unspecified, uses
\code{image_data_format} value found in your Keras config file at
\verb{~/.keras/keras.json} (if exists) else 'channels_last'.
Defaults to 'channels_last'.}

\item{...}{standard layer arguments.}
}
\description{
Average pooling operation for spatial data

Average pooling operation for spatial data
}
\details{
Downsamples the input along its spatial dimensions (height and width)
by taking the average value over an input window
(of size defined by \code{pool_size}) for each channel of the input.
The window is shifted by \code{strides} along each dimension.

The resulting output when using \code{"valid"} padding option has a shape
(number of rows or columns) of:
\code{output_shape = math.floor((input_shape - pool_size) / strides) + 1}
(when \code{input_shape >= pool_size})

The resulting output shape when using the \code{"same"} padding option is:
\code{output_shape = math.floor((input_shape - 1) / strides) + 1}

For example, for \verb{strides=(1, 1)} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3.],
...                  [4., 5., 6.],
...                  [7., 8., 9.]])
>>> x = tf.reshape(x, [1, 3, 3, 1])
>>> avg_pool_2d = tf.keras.layers.AveragePooling2D(pool_size=(2, 2),
...    strides=(1, 1), padding='valid')
>>> avg_pool_2d(x)
<tf.Tensor: shape=(1, 2, 2, 1), dtype=float32, numpy=
  array([[[[3.],
           [4.]],
          [[6.],
           [7.]]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for \verb{stride=(2, 2)} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3., 4.],
...                  [5., 6., 7., 8.],
...                  [9., 10., 11., 12.]])
>>> x = tf.reshape(x, [1, 3, 4, 1])
>>> avg_pool_2d = tf.keras.layers.AveragePooling2D(pool_size=(2, 2),
...    strides=(2, 2), padding='valid')
>>> avg_pool_2d(x)
<tf.Tensor: shape=(1, 1, 2, 1), dtype=float32, numpy=
  array([[[[3.5],
           [5.5]]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for \verb{strides=(1, 1)} and \code{padding="same"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3.],
...                  [4., 5., 6.],
...                  [7., 8., 9.]])
>>> x = tf.reshape(x, [1, 3, 3, 1])
>>> avg_pool_2d = tf.keras.layers.AveragePooling2D(pool_size=(2, 2),
...    strides=(1, 1), padding='same')
>>> avg_pool_2d(x)
<tf.Tensor: shape=(1, 3, 3, 1), dtype=float32, numpy=
  array([[[[3.],
           [4.],
           [4.5]],
          [[6.],
           [7.],
           [7.5]],
          [[7.5],
           [8.5],
           [9.]]]], dtype=float32)>
}\if{html}{\out{</div>}}

Downsamples the input along its spatial dimensions (height and width)
by taking the average value over an input window
(of size defined by \code{pool_size}) for each channel of the input.
The window is shifted by \code{strides} along each dimension.

The resulting output when using \code{"valid"} padding option has a shape
(number of rows or columns) of:
\code{output_shape = math.floor((input_shape - pool_size) / strides) + 1}
(when \code{input_shape >= pool_size})

The resulting output shape when using the \code{"same"} padding option is:
\code{output_shape = math.floor((input_shape - 1) / strides) + 1}

For example, for \verb{strides=(1, 1)} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3.],
...                  [4., 5., 6.],
...                  [7., 8., 9.]])
>>> x = tf.reshape(x, [1, 3, 3, 1])
>>> avg_pool_2d = tf.keras.layers.AveragePooling2D(pool_size=(2, 2),
...    strides=(1, 1), padding='valid')
>>> avg_pool_2d(x)
<tf.Tensor: shape=(1, 2, 2, 1), dtype=float32, numpy=
  array([[[[3.],
           [4.]],
          [[6.],
           [7.]]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for \verb{stride=(2, 2)} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3., 4.],
...                  [5., 6., 7., 8.],
...                  [9., 10., 11., 12.]])
>>> x = tf.reshape(x, [1, 3, 4, 1])
>>> avg_pool_2d = tf.keras.layers.AveragePooling2D(pool_size=(2, 2),
...    strides=(2, 2), padding='valid')
>>> avg_pool_2d(x)
<tf.Tensor: shape=(1, 1, 2, 1), dtype=float32, numpy=
  array([[[[3.5],
           [5.5]]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for \verb{strides=(1, 1)} and \code{padding="same"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([[1., 2., 3.],
...                  [4., 5., 6.],
...                  [7., 8., 9.]])
>>> x = tf.reshape(x, [1, 3, 3, 1])
>>> avg_pool_2d = tf.keras.layers.AveragePooling2D(pool_size=(2, 2),
...    strides=(1, 1), padding='same')
>>> avg_pool_2d(x)
<tf.Tensor: shape=(1, 3, 3, 1), dtype=float32, numpy=
  array([[[[3.],
           [4.],
           [4.5]],
          [[6.],
           [7.],
           [7.5]],
          [[7.5],
           [8.5],
           [9.]]]], dtype=float32)>
}\if{html}{\out{</div>}}
}
\seealso{
\itemize{
\item \url{https://keras.io/api/layers}
}

\itemize{
\item \url{https://keras.io/api/layers}
}
}
