% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers.R
\name{layer_dropout}
\alias{layer_dropout}
\title{Applies Dropout to the input}
\usage{
layer_dropout(object, rate, noise_shape = NULL, seed = NULL, ...)
}
\arguments{
\item{rate}{Float between 0 and 1. Fraction of the input units to drop.}

\item{noise_shape}{1D integer tensor representing the shape of the
binary dropout mask that will be multiplied with the input.
For instance, if your inputs have shape
\verb{(batch_size, timesteps, features)} and
you want the dropout mask to be the same for all timesteps,
you can use \verb{noise_shape=(batch_size, 1, features)}.}

\item{seed}{A Python integer to use as random seed.}

\item{...}{standard layer arguments.}
}
\description{
Applies Dropout to the input
}
\details{
The Dropout layer randomly sets input units to 0 with a frequency of \code{rate}
at each step during training time, which helps prevent overfitting.
Inputs not set to 0 are scaled up by 1/(1 - rate) such that the sum over
all inputs is unchanged.

Note that the Dropout layer only applies when \code{training} is set to TRUE
such that no values are dropped during inference. When using \code{model.fit},
\code{training} will be appropriately set to TRUE automatically, and in other
contexts, you can set the kwarg explicitly to TRUE when calling the layer.

(This is in contrast to setting \code{trainable=FALSE} for a Dropout layer.
\code{trainable} does not affect the layer's behavior, as Dropout does
not have any variables/weights that can be frozen during training.)

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> tf.random.set_seed(0)
>>> layer = tf.keras.layers.Dropout(.2, input_shape=(2,))
>>> data = np.arange(10).reshape(5, 2).astype(np.float32)
>>> print(data)
[[0. 1.]
 [2. 3.]
 [4. 5.]
 [6. 7.]
 [8. 9.]]
>>> outputs = layer(data, training=TRUE)
>>> print(outputs)
tf.Tensor(
[[ 0.    1.25]
 [ 2.5   3.75]
 [ 5.    6.25]
 [ 7.5   8.75]
 [10.    0.  ]], shape=(5, 2), dtype=float32)
}\if{html}{\out{</div>}}
}
\seealso{
\itemize{
\item \url{https://keras.io/api/layers}
}
}
