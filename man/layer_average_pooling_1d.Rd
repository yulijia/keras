% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers.R
\name{layer_average_pooling_1d}
\alias{layer_average_pooling_1d}
\title{Average pooling for temporal data}
\usage{
layer_average_pooling_1d(
  object,
  pool_size = 2L,
  strides = NULL,
  padding = "valid",
  data_format = "channels_last",
  ...
)

layer_average_pooling_1d(
  object,
  pool_size = 2L,
  strides = NULL,
  padding = "valid",
  data_format = "channels_last",
  ...
)
}
\arguments{
\item{pool_size}{Integer, size of the average pooling windows.}

\item{strides}{Integer, or NULL. Factor by which to downscale.
E.g. 2 will halve the input.
If NULL, it will default to \code{pool_size}.}

\item{padding}{One of \code{"valid"} or \code{"same"} (case-insensitive).
\code{"valid"} means no padding. \code{"same"} results in padding evenly to
the left/right or up/down of the input such that output has the same
height/width dimension as the input.}

\item{data_format}{A string,
one of \code{channels_last} (default) or \code{channels_first}.
The ordering of the dimensions in the inputs.
\code{channels_last} corresponds to inputs with shape
\verb{(batch, steps, features)} while \code{channels_first}
corresponds to inputs with shape
\verb{(batch, features, steps)}.}

\item{...}{standard layer arguments.}
}
\description{
Average pooling for temporal data

Average pooling for temporal data
}
\details{
Downsamples the input representation by taking the average value over the
window defined by \code{pool_size}. The window is shifted by \code{strides}.  The
resulting output when using "valid" padding option has a shape of:
\verb{output_shape = (input_shape - pool_size + 1) / strides)}

The resulting output shape when using the "same" padding option is:
\code{output_shape = input_shape / strides}

For example, for strides=1 and padding="valid":

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([1., 2., 3., 4., 5.])
>>> x = tf.reshape(x, [1, 5, 1])
>>> x
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
  array([[[1.],
          [2.],
          [3.],
          [4.],
          [5.]], dtype=float32)>
>>> avg_pool_1d = tf.keras.layers.AveragePooling1D(pool_size=2,
...    strides=1, padding='valid')
>>> avg_pool_1d(x)
<tf.Tensor: shape=(1, 4, 1), dtype=float32, numpy=
array([[[1.5],
        [2.5],
        [3.5],
        [4.5]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for strides=2 and padding="valid":

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([1., 2., 3., 4., 5.])
>>> x = tf.reshape(x, [1, 5, 1])
>>> x
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
  array([[[1.],
          [2.],
          [3.],
          [4.],
          [5.]], dtype=float32)>
>>> avg_pool_1d = tf.keras.layers.AveragePooling1D(pool_size=2,
...    strides=2, padding='valid')
>>> avg_pool_1d(x)
<tf.Tensor: shape=(1, 2, 1), dtype=float32, numpy=
array([[[1.5],
        [3.5]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for strides=1 and padding="same":

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([1., 2., 3., 4., 5.])
>>> x = tf.reshape(x, [1, 5, 1])
>>> x
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
  array([[[1.],
          [2.],
          [3.],
          [4.],
          [5.]], dtype=float32)>
>>> avg_pool_1d = tf.keras.layers.AveragePooling1D(pool_size=2,
...    strides=1, padding='same')
>>> avg_pool_1d(x)
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
array([[[1.5],
        [2.5],
        [3.5],
        [4.5],
        [5.]]], dtype=float32)>
}\if{html}{\out{</div>}}

Downsamples the input representation by taking the average value over the
window defined by \code{pool_size}. The window is shifted by \code{strides}.  The
resulting output when using "valid" padding option has a shape of:
\verb{output_shape = (input_shape - pool_size + 1) / strides)}

The resulting output shape when using the "same" padding option is:
\code{output_shape = input_shape / strides}

For example, for strides=1 and padding="valid":

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([1., 2., 3., 4., 5.])
>>> x = tf.reshape(x, [1, 5, 1])
>>> x
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
  array([[[1.],
          [2.],
          [3.],
          [4.],
          [5.]], dtype=float32)>
>>> avg_pool_1d = tf.keras.layers.AveragePooling1D(pool_size=2,
...    strides=1, padding='valid')
>>> avg_pool_1d(x)
<tf.Tensor: shape=(1, 4, 1), dtype=float32, numpy=
array([[[1.5],
        [2.5],
        [3.5],
        [4.5]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for strides=2 and padding="valid":

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([1., 2., 3., 4., 5.])
>>> x = tf.reshape(x, [1, 5, 1])
>>> x
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
  array([[[1.],
          [2.],
          [3.],
          [4.],
          [5.]], dtype=float32)>
>>> avg_pool_1d = tf.keras.layers.AveragePooling1D(pool_size=2,
...    strides=2, padding='valid')
>>> avg_pool_1d(x)
<tf.Tensor: shape=(1, 2, 1), dtype=float32, numpy=
array([[[1.5],
        [3.5]]], dtype=float32)>
}\if{html}{\out{</div>}}

For example, for strides=1 and padding="same":

\if{html}{\out{<div class="sourceCode python">}}\preformatted{>>> x = tf.constant([1., 2., 3., 4., 5.])
>>> x = tf.reshape(x, [1, 5, 1])
>>> x
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
  array([[[1.],
          [2.],
          [3.],
          [4.],
          [5.]], dtype=float32)>
>>> avg_pool_1d = tf.keras.layers.AveragePooling1D(pool_size=2,
...    strides=1, padding='same')
>>> avg_pool_1d(x)
<tf.Tensor: shape=(1, 5, 1), dtype=float32, numpy=
array([[[1.5],
        [2.5],
        [3.5],
        [4.5],
        [5.]]], dtype=float32)>
}\if{html}{\out{</div>}}
}
\seealso{
\itemize{
\item \url{https://keras.io/api/layers}
}

\itemize{
\item \url{https://keras.io/api/layers}
}
}
