% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzzz.R
\name{layer_conv_1d}
\alias{layer_conv_1d}
\title{1D convolution layer (e.g. temporal convolution)}
\usage{
layer_conv_1d(
  object,
  filters,
  kernel_size,
  strides = 1L,
  padding = "valid",
  data_format = "channels_last",
  dilation_rate = 1L,
  groups = 1L,
  activation = NULL,
  use_bias = TRUE,
  kernel_initializer = "glorot_uniform",
  bias_initializer = "zeros",
  kernel_regularizer = NULL,
  bias_regularizer = NULL,
  activity_regularizer = NULL,
  kernel_constraint = NULL,
  bias_constraint = NULL,
  ...
)

layer_conv_1d(
  object,
  filters,
  kernel_size,
  strides = 1L,
  padding = "valid",
  data_format = "channels_last",
  dilation_rate = 1L,
  groups = 1L,
  activation = NULL,
  use_bias = TRUE,
  kernel_initializer = "glorot_uniform",
  bias_initializer = "zeros",
  kernel_regularizer = NULL,
  bias_regularizer = NULL,
  activity_regularizer = NULL,
  kernel_constraint = NULL,
  bias_constraint = NULL,
  ...
)
}
\arguments{
\item{filters}{Integer, the dimensionality of the output space
(i.e. the number of output filters in the convolution).}

\item{kernel_size}{An integer or list of a single integer,
specifying the length of the 1D convolution window.}

\item{strides}{An integer or list of a single integer,
specifying the stride length of the convolution.
Specifying any stride value != 1 is incompatible with specifying
any \code{dilation_rate} value != 1.}

\item{padding}{One of \code{"valid"}, \code{"same"} or \code{"causal"} (case-insensitive).
\code{"valid"} means no padding. \code{"same"} results in padding with zeros
evenly to the left/right or up/down of the input such that output has
the same height/width dimension as the input.
\code{"causal"} results in causal (dilated) convolutions, e.g. \code{output[t]}
does not depend on \verb{input[t+1:]}. Useful when modeling temporal data
where the model should not violate the temporal order.
See \href{https://arxiv.org/abs/1609.03499}{WaveNet: A Generative Model for Raw Audio, section 2.1}.}

\item{data_format}{A string, one of \code{channels_last} (default) or
\code{channels_first}. The ordering of the dimensions in the inputs.
\code{channels_last} corresponds to inputs with shape \verb{(batch_size, width, channels)} while \code{channels_first} corresponds to inputs with shape
\verb{(batch_size, channels, width)}. Note that the \code{channels_first} format
is currently not supported by TensorFlow on CPU.}

\item{dilation_rate}{an integer or list of a single integer, specifying
the dilation rate to use for dilated convolution.
Currently, specifying any \code{dilation_rate} value != 1 is
incompatible with specifying any \code{strides} value != 1.}

\item{groups}{A positive integer specifying the number of groups in which the
input is split along the channel axis. Each group is convolved
separately with \code{filters / groups} filters. The output is the
concatenation of all the \code{groups} results along the channel axis.
Input channels and \code{filters} must both be divisible by \code{groups}.}

\item{activation}{Activation function to use.
If you don't specify anything, no activation is applied
(see \code{keras.activations}).}

\item{use_bias}{Boolean, whether the layer uses a bias vector.}

\item{kernel_initializer}{Initializer for the \code{kernel} weights matrix
(see \code{keras.initializers}). Defaults to 'glorot_uniform'.}

\item{bias_initializer}{Initializer for the bias vector
(see \code{keras.initializers}). Defaults to 'zeros'.}

\item{kernel_regularizer}{Regularizer function applied to
the \code{kernel} weights matrix (see \code{keras.regularizers}).}

\item{bias_regularizer}{Regularizer function applied to the bias vector
(see \code{keras.regularizers}).}

\item{activity_regularizer}{Regularizer function applied to
the output of the layer (its "activation")
(see \code{keras.regularizers}).}

\item{kernel_constraint}{Constraint function applied to the kernel matrix
(see \code{keras.constraints}).}

\item{bias_constraint}{Constraint function applied to the bias vector
(see \code{keras.constraints}).}

\item{...}{standard layer arguments.}
}
\description{
1D convolution layer (e.g. temporal convolution)

1D convolution layer (e.g. temporal convolution)
}
\details{
This layer creates a convolution kernel that is convolved
with the layer input over a single spatial (or temporal) dimension
to produce a tensor of outputs.
If \code{use_bias} is TRUE, a bias vector is created and added to the outputs.
Finally, if \code{activation} is not \code{NULL},
it is applied to the outputs as well.

When using this layer as the first layer in a model,
provide an \code{input_shape} argument
(list of integers or \code{NULL}, e.g.
\verb{(10, 128)} for sequences of 10 vectors of 128-dimensional vectors,
or \verb{(NULL, 128)} for variable-length sequences of 128-dimensional vectors.

This layer creates a convolution kernel that is convolved
with the layer input over a single spatial (or temporal) dimension
to produce a tensor of outputs.
If \code{use_bias} is TRUE, a bias vector is created and added to the outputs.
Finally, if \code{activation} is not \code{NULL},
it is applied to the outputs as well.

When using this layer as the first layer in a model,
provide an \code{input_shape} argument
(list of integers or \code{NULL}, e.g.
\verb{(10, 128)} for sequences of 10 vectors of 128-dimensional vectors,
or \verb{(NULL, 128)} for variable-length sequences of 128-dimensional vectors.
}
\seealso{
\itemize{
\item \url{https://keras.io/api/layers}
}

\itemize{
\item \url{https://keras.io/api/layers}
}
}
